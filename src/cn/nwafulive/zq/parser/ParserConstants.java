/* Generated By:JJTree&JavaCC: Do not edit this line. ParserConstants.java */
package cn.nwafulive.zq.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 7;
  /** RegularExpression Id. */
  int ELSE = 8;
  /** RegularExpression Id. */
  int INT = 9;
  /** RegularExpression Id. */
  int RETURN = 10;
  /** RegularExpression Id. */
  int VOID = 11;
  /** RegularExpression Id. */
  int WHILE = 12;
  /** RegularExpression Id. */
  int MAIN = 13;
  /** RegularExpression Id. */
  int UNDERSCORE = 14;
  /** RegularExpression Id. */
  int COMMA = 15;
  /** RegularExpression Id. */
  int SEMICOLON = 16;
  /** RegularExpression Id. */
  int COLON = 17;
  /** RegularExpression Id. */
  int LEFTPARENTHESES = 18;
  /** RegularExpression Id. */
  int RIGHTPARENTHESES = 19;
  /** RegularExpression Id. */
  int EQUAL = 20;
  /** RegularExpression Id. */
  int PLUS = 21;
  /** RegularExpression Id. */
  int MINUS = 22;
  /** RegularExpression Id. */
  int MULTIPLY = 23;
  /** RegularExpression Id. */
  int DIVIDE = 24;
  /** RegularExpression Id. */
  int LB = 25;
  /** RegularExpression Id. */
  int RB = 26;
  /** RegularExpression Id. */
  int LM = 27;
  /** RegularExpression Id. */
  int RM = 28;
  /** RegularExpression Id. */
  int LESS = 29;
  /** RegularExpression Id. */
  int GREATER = 30;
  /** RegularExpression Id. */
  int EQUALTO = 31;
  /** RegularExpression Id. */
  int EQUALGREATER = 32;
  /** RegularExpression Id. */
  int EQUALLESS = 33;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 34;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 35;
  /** RegularExpression Id. */
  int HEX_LITERAL = 36;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 37;
  /** RegularExpression Id. */
  int IDENTIFIER = 38;
  /** RegularExpression Id. */
  int LETTER = 39;
  /** RegularExpression Id. */
  int DIGIT = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"if\"",
    "\"else\"",
    "\"int\"",
    "\"return\"",
    "\"void\"",
    "\"while\"",
    "\"main\"",
    "\"_\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"<\"",
    "\">\"",
    "\"==\"",
    "\">=\"",
    "\"<=\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"%\"",
  };

}
